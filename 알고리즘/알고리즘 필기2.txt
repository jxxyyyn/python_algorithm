알고리즘 패러다임: 자주 나타나는 알고리즘 접근법

1.  Brute Force (무차별 대입 공격)
- 가능한 모든 경우의 수 시도하기  (ex: 조합)
- 일반적으로 비효율적, 시간복잡도 높음 / 직관적이고 명확함, 코드 구현 쉬움, 답을 확실하게 찾음
- 효율적인 알고리즘의 첫 시작

2.  Divide and Conquer (분할 정복)
- 문제를 여러 개의 부분 문제로 분할한 뒤 각 부분 문제들의 솔루션을 합쳐서 기존 문제 해결
- 1.  Divide 2. Conquer(부분문제 재귀적으로 접근해야 하기도 함) 3. Combine
* 합병정렬 (divide and conquer 사용)
1. 리스트를 반으로 나눈다. 2. 왼쪽 리스트와 오른쪽 리스트를 각각 정렬한다. 3. 정렬된 두 리스트를 하나의 정렬된 리스트로 합병한다
(각 리스트의 0번부터 비교, 인덱스 맨 앞 비교하여 더 작은 것을 정렬된 리스트 안으로(기존 리스트에서 삭제), 하나의 리스트 다 끝나면 나머지 리스트 그대로 넣어줌.)
(len1 되면 베이스케이스로 conqour, 부분문제 합쳐가면서 기존 문제로 올라오기)